// This string is autogenerated by ChangeAppSettings.sh, do not change spaces amount anywhere
package net.sourceforge.clonekeenplus;

import android.app.Activity;
import android.content.Context;
import java.util.Vector;

class Globals {
	public static String ApplicationName = "CommanderGenius";

	public static final boolean Using_SDL_1_3 = false;

	// Should be zip file
	public static String DataDownloadUrl = "Data files are 2 Mb|https://sourceforge.net/projects/libsdl-android/files/CommanderGenius/commandergenius-data.zip/download^High-quality GFX and music - 40 Mb|https://sourceforge.net/projects/libsdl-android/files/CommanderGenius/commandergenius-hqp.zip/download";

	// Set this value to true if you're planning to render 3D using OpenGL - it eats some GFX resources, so disabled for 2D
	public static boolean NeedDepthBuffer = false;

	// Set this value to true if you're planning to render 3D using OpenGL - it eats some GFX resources, so disabled for 2D
	public static boolean HorizontalOrientation = true;

	// prevent device from going to suspend mode
	public static boolean InhibitSuspend = false;

	// Readme text to be shown on download page
	public static String ReadmeText = "^You may press \"Home\" now - the data will be downloaded in background".replace("^","\n");

	public static String CommandLine = "";

	public static boolean AppUsesMouse = false;
	
	public static boolean AppNeedsTwoButtonMouse = false;

	public static boolean AppNeedsArrowKeys = true;

	public static boolean AppNeedsTextInput = true;

	public static boolean AppUsesJoystick = false;

	public static boolean AppHandlesJoystickSensitivity = false;

	public static boolean AppUsesMultitouch = false;

	public static boolean NonBlockingSwapBuffers = false;

	public static int AppTouchscreenKeyboardKeysAmount = 4;

	public static int AppTouchscreenKeyboardKeysAmountAutoFire = 1;

	// Phone-specific config
	public static boolean DownloadToSdcard = true;
	public static boolean PhoneHasTrackball = false;
	public static boolean PhoneHasArrowKeys = false;
	public static boolean UseAccelerometerAsArrowKeys = false;
	public static boolean UseTouchscreenKeyboard = true;
	public static int TouchscreenKeyboardSize = 0;
	public static int TouchscreenKeyboardTheme = 1;
	public static int AccelerometerSensitivity = 2;
	public static int AccelerometerCenterPos = 2;
	public static int TrackballDampening = 0;
	public static int AudioBufferConfig = 0;
	public static boolean OptionalDataDownload[] = null;
	public static final int LEFT_CLICK_NORMAL = 0;
	public static final int LEFT_CLICK_NEAR_CURSOR = 1;
	public static final int LEFT_CLICK_WITH_MULTITOUCH = 2;
	public static final int LEFT_CLICK_WITH_PRESSURE = 3;
	public static final int LEFT_CLICK_WITH_DPAD = 4;
	public static int LeftClickMethod = LEFT_CLICK_NORMAL;
	public static final int RIGHT_CLICK_NONE = 0;
	public static final int RIGHT_CLICK_WITH_MULTITOUCH = 1;
	public static final int RIGHT_CLICK_WITH_PRESSURE = 2;
	public static final int RIGHT_CLICK_WITH_MENU_BUTTON = 3;
	public static int RightClickMethod = RIGHT_CLICK_NONE;
	public static boolean MoveMouseWithJoystick = false;
	public static int MoveMouseWithJoystickSpeed = 0;
	public static int MoveMouseWithJoystickAccel = 0;
	public static boolean ClickMouseWithDpad = false;
	public static boolean ShowScreenUnderFinger = false;
	public static boolean KeepAspectRatio = false;
	public static int ClickScreenPressure = 0;
	public static int ClickScreenTouchspotSize = 0;
	public static int RemapHwKeycode[] = new int[SDL_Keys.JAVA_KEYCODE_LAST];
	public static int RemapScreenKbKeycode[] = new int[10];
	public static boolean ScreenKbControlsShown[] = new boolean[12];
}

class LoadLibrary {
	public LoadLibrary() { System.loadLibrary("sdl-1.2"); };
}
